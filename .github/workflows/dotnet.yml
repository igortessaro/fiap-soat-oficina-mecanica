name: .NET CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'release/**'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  CONFIGURATION: Release

jobs:
  build_unit:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed for accurate Sonar blame
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 9.0.x
      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: nuget-${{ runner.os }}-
      - name: Restore
        run: dotnet restore
      - name: Code Format (verify)
        run: dotnet format --verify-no-changes
      - name: Build
        run: dotnet build --no-restore -c $CONFIGURATION
      - name: Unit Tests (Domain + Application with coverage)
        run: |
          dotnet test tests/Fiap.Soat.SmartMechanicalWorkshop.Domain.Tests/Fiap.Soat.SmartMechanicalWorkshop.Domain.Tests.csproj \
            -c $CONFIGURATION --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage --verbosity normal
          dotnet test tests/Fiap.Soat.SmartMechanicalWorkshop.Application.Tests/Fiap.Soat.SmartMechanicalWorkshop.Application.Tests.csproj \
            -c $CONFIGURATION --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage --verbosity normal
      - name: Package coverage artifacts (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          mkdir -p coverage-merged
          # Simple gather; (advanced merge can use reportgenerator if desired)
          cp coverage/*/*.xml coverage-merged/ || true
      - name: Upload coverage (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage-merged
          if-no-files-found: warn

  integration_tests:
    name: Integration Tests
    if: ${{ github.event_name == 'pull_request' }}
    needs: build_unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore
        run: dotnet restore
      - name: Run integration tests
        run: dotnet test tests/Fiap.Soat.SmartMechanicalWorkshop.Integration.Tests/Fiap.Soat.SmartMechanicalWorkshop.Integration.Tests.csproj -c $CONFIGURATION --verbosity normal

  sonar:
    name: SonarCloud
    if: ${{ github.event_name == 'pull_request' }}
    needs: build_unit
    runs-on: windows-latest   # keep windows if you prefer; linux also works
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
      - name: Cache Sonar Scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: sonar-scanner-${{ runner.os }}
          restore-keys: sonar-scanner-
      - name: Install Sonar Scanner
        if: steps.cache.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Sonar Begin
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"igortessaro_fiap-soat-oficina-mecanica" `
            /o:"igortessaro" `
            /d:sonar.token="$env:SONAR_TOKEN" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="coverage/**/*.xml" `
            /d:sonar.coverage.exclusions="**Tests/**,**Integration.Tests/**,**/Configurations/**,**/Migrations/**" `
            /d:sonar.exclusions="**/*.sql,**/*Designer.cs"
      - name: Rebuild (required for analysis)
        run: dotnet build -c Release --no-incremental
        shell: powershell
      - name: Sonar End
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
