// <auto-generated />
using System;
using Fiap.Soat.SmartMechanicalWorkshop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fiap.Soat.SmartMechanicalWorkshop.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250626020216_AddClientTable")]
    partial class AddClientTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Fiap.Soat.SmartMechanicalWorkshop.Domain.Domains.Entities.AvailableService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AvailableServices");
                });

            modelBuilder.Entity("Fiap.Soat.SmartMechanicalWorkshop.Domain.Domains.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("document");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("fullname");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Fiap.Soat.SmartMechanicalWorkshop.Domain.Domains.Entities.Supply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("Fiap.Soat.SmartMechanicalWorkshop.Domain.Domains.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ManufactureYear")
                        .HasColumnType("date");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Fiap.Soat.SmartMechanicalWorkshop.Domain.Domains.Entities.Client", b =>
                {
                    b.OwnsOne("Fiap.Soat.SmartMechanicalWorkshop.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("VARCHAR(60)")
                                .HasColumnName("addressCity");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("VARCHAR(30)")
                                .HasColumnName("addressState");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("addressStreet");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("VARCHAR(15)")
                                .HasColumnName("addressZipCode");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.OwnsOne("Fiap.Soat.SmartMechanicalWorkshop.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("VARCHAR(255)")
                                .HasColumnName("email");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.OwnsOne("Fiap.Soat.SmartMechanicalWorkshop.Domain.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("AreaCode")
                                .IsRequired()
                                .HasColumnType("VARCHAR(5)")
                                .HasColumnName("phoneAreaCode");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("VARCHAR(5)")
                                .HasColumnName("phoneCountryCode");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("VARCHAR(15)")
                                .HasColumnName("phoneNumber");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("VARCHAR(10)")
                                .HasColumnName("phoneType");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Email");

                    b.Navigation("Phone");
                });
#pragma warning restore 612, 618
        }
    }
}
